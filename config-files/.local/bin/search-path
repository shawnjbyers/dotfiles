#!/usr/bin/env python3
"""Search the $PATH for a pattern."""

__version__ = '0.1.0'

import argparse
import os
import shlex
import subprocess as sp

COMMAND_NAME = 'search-path'

def main() -> None:
    """Runs as the entry point of the script."""

    parser = argparse.ArgumentParser(
        prog=COMMAND_NAME,
        description='Search the path for a pattern',
        allow_abbrev=False,
        )

    parser.add_argument(
        '-V', '--version', action='version',
        version=f'%(prog)s {__version__}',
        )

    parser.add_argument(
        'search_pattern',
        help='a POSIX extended regular expression (ERE)',
        )

    # TODO: Add extra options.
    # parser.add_argument('-E', '--extended-regexp', ???) # default
    # parser.add_argument('-F', '--fixed-strings', ???)
    # parser.add_argument('-G', '--basic-regexp', ???)
    # parser.add_argument('-P', '--perl-regexp', ???)

    args = parser.parse_args()

    for pathdir in os.environ['PATH'].split(':'):
        ls_cmd = f'ls -A1 -- {shlex.quote(pathdir)}/.'
        quoted_pattern = shlex.quote(args.search_pattern)
        grep_cmd = f'grep -E -- {quoted_pattern}'
        full_cmd = f'{ls_cmd} | {grep_cmd}'
        cmd_args = ['sh', '-c', full_cmd]

        with sp.Popen(cmd_args, stdout=sp.PIPE) as cmd_proc:
            cmd_out, _ = cmd_proc.communicate()
            file_lines = cmd_out.decode('utf-8').splitlines()
            for line in file_lines:
                print(pathdir + '/' + line)

if __name__ == '__main__':
    main()
