#!/bin/env sh

set -eu

if [ 0 -ne $# ]; then
  printf '%s: bad usage\n' "$0" >&2
  exit 2
fi

bname="$(basename -- "$0")" || {
  bname="$0"
  printf '%s: basename failed\n' "${bname}" >&2
  exit 1
}

dname="$(dirname -- "$0" && printf 'x')" || {
  printf '%s: dirname failed\n' "${bname}" >&2
  exit 1
}
dname="${dname%??}" # strip trailing \nx
if [ 'x' = "x${dname}" ]; then
  printf '%s: could not find dirname\n' "${bname}" >&2
  exit 1
fi
fname="${dname}"'/shellrc.sh'

[ -f "${fname}" ] || {
  printf '%s: could not find file %s\n' "${bname}" "${fname}" >&2
  exit 1
}

for shell in posh dash zsh bash; do
  shell_path="$(command -v -- "${shell}")" || {
    printf '%s: could not find shell %s\n' "${bname}" "${shell}" >&2
    continue
  }

  "${shell_path}" -- "${fname}" || {
    printf '%s: non-interactive shell %s failed\n' "${bname}" "${shell}" >&2
    exit 1
  }
done

for shell in zsh bash; do
  shell_path="$(command -v -- "${shell}")" || {
    printf '%s: could not find shell %s\n' "${bname}" "${shell}" >&2
    continue
  }

  if [ "${shell}" = zsh ]; then
    "${shell_path}" --no-rcs -i -- "${fname}" || {
      printf '%s: interactive shell %s failed\n' "${bname}" "${shell}" >&2
      exit 1
    }
  elif [ "${shell}" = bash ]; then
    "${shell_path}" --norc -i -- "${fname}" || {
      printf '%s: interactive shell %s failed\n' "${bname}" "${shell}" >&2
      exit 1
    }
  else
    printf '%s: internal error: unrecognized shell: %s\n' "${bname}" "${shell}" >&2
    exit 3
  fi
done
